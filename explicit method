#!/usr/bin/python
#coding: utf-8
#finite difference method solving simple parabolic equations(explicit method)
import numpy as np
import matplotlib.pyplot as plt
#setting up the plotting

#define number of nodes
N = 21
dx =1/(N-1)
#define the time step
T =1000
dt = 1/T
#gamar is no less than 0.5, otherwise the algorithm would not converge.
r =dt/(np.square(dx))
print (r)
#boundary condition
U=np.zeros(N)

U[1]=0
U[N-1]=0
x = np.linspace(0,1,int(N))

for i in range(0,int((N-1)/2)): 
 U[i]=2*(i/int(N-1))
 U[i]
for i in range(int((N-1)/2),int(N-1)):
 U[i]=2-2*(i/int(N-1))

plt.plot(x,U, label = "initial condition")  
print (U)
 
n=0
#explicit method
for iteration in range(0,100):
    for i in range(1,N-1,1):
     U[i]=r*U[i+1]+(1-2*r)*U[i]+r*U[i-1]   
    if iteration > n*10:
     plt.plot(x,U)
     n=n+1
plt.plot(x,U, label="last condition")
plt.title("explicit method")
plt.legend()     
plt.show() 
print (U)
